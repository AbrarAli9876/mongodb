 a. Develop a MongoDB query to select certain fields and ignore some fields of the
 documents from any  collection.
 b. Develop  a MongoDB query to display the first 5 documents from the results obtained in
 a collection
 c. Execute query selectors (Bitwise selectors ) and list out the results on any 
Solution :
 (a) 
1. Create a collection called “movies” with following documents
 Title
 Inception
 Director
 Christopher Nolan
 Genre
 Year
 ratings
 collection 
Science Fiction 2010 Imdb: 8.8, rottenTomatoes:87
 The Matrix
 Wachowskis
 Science Fiction 1999 Imdb: 8.7, rottenTomatoes:87
 The Godfather Francis Ford Coppola Crime
 1972 Imdb:9.2, rottenTomatoes:97
 db.movies.insertMany([
 {title:"Inception", director:"Christopher Nolan",genre:"Science Fiction",year:2010,ratings:
 {imdb:8.8, rottenTomatoes:87}},
 {title:"The Matrix", director:"Wachowskis",genre:"Science Fiction",year:1999,ratings:
 {imdb:8.7, rottenTomatoes:87}},
 {title:"The Godfather", director:"Francis Ford Coppola",genre:"Crime",year:1972,ratings:
 {imdb:9.2, rottenTomatoes:87}}
 ])
 2. Including specific fields
 Select only the title and director fields from the Movies collection.
 db.movies.find({},{title:1, director:1,_id:0})
 3. Excluding specific fields
 Exclude genre while displaying the documents of movies collection.
 db.movies.find({},{_id:0, genre:0})
 (b) 
1. Develop  a MongoDB query to display the first 2 documents from the results obtained in a [use of
 limit and find]
 db.movies.find().limit(2)
 db.movies.find({genre:"Science Fiction"}, {_id:0}).limit(1)
 2. Find number of documents in a employees collection
 db.movies.count()
(c) 
1. Create the “Devices” collection and insert documents
 db.Devices.insertMany([{name: "Device A", status:5},{name: "Device B", status:3},
 {name: "Device C", status:12},{name: "Device D", status:10},{name: "Device E",
 status:7}])
 2. Find devices where the binary status has both the 1st and 3rd bits set
 db.Devices.find({status: {$bitsAllSet:[0,2]}}).pretty()
 3. Find devices where the binary status has atleast the 2nd bit set (binary mask 0010 or
 decimal 2).
 db.Devices.find({status: {$bitsAnySet:[1]}}).pretty()
 4. Find devices where the binary status has both the 2nd and 4th bits are clear. (binary mask
 1010, decimal 10).
 db.Devices.find({status: {$bitsAllClear:[1,3]}}).pretty()
 5. Find devices where the binary status has atleast the 1st bit clear. (binary mask 0001,
 decimal 1).
 db.Devices.find({status: {$bitsAnyClear:[0]}}).pretty()